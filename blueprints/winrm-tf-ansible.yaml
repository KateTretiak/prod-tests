spec_version: 2
description: deploy azure vm

inputs:
  agent:
    type: agent
  vm_name:
    type: string
    default: "vidovmwin"
  resource_group:
    type: string
    default: "vido_rg_win"

outputs:
  vm_name:
    value: '{{.grains.vm.outputs.vm_id}}'
  public_ip:
    value: '{{.grains.vm.outputs.public_ip}}'

grains:
  vm:
    kind: terraform
    spec:
      source:
        store: bps
        path: terraform/azure_win_vm_wi
      agent:
        name: '{{ .inputs.agent }}'
      inputs:
        - vm_name: '{{.inputs.vm_name}}'
        - resource_group: '{{.inputs.resource_group}}'
      outputs:
        - vm_id
        - public_ip
        - password

  configure:
    kind: ansible
    depends-on: vm
    spec:
      source:
        store: bps
        path: ansible/configure-win-vm/configure-win-vm.yaml
      agent:
        name: '{{ .inputs.agent }}'
      inventory-file:
        all:
          hosts:
            vm:
              ansible_host: '{{ .grains.vm.outputs.public_ip }}'
              ansible_user: 'adminuser'
              ansible_password: '{{ .grains.vm.outputs.password }}'
              ansible_become: yes
              ansible_become_method: sudo
              ansible_become_pass: '{{ .grains.vm.outputs.password }}' 
            localhost:
              ansible_connection: local
